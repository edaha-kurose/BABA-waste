-- ============================================================================
-- DDL 028: BillingÈñ¢ÈÄ£„ÅÆÂ§ñÈÉ®„Ç≠„ÉºÂà∂Á¥ÑËøΩÂä†
-- ============================================================================
-- ÁõÆÁöÑ: „Éá„Éº„ÇøÊï¥ÂêàÊÄß‰øùË®º„ÅÆ„Åü„ÇÅ„ÄÅbilling_items „Å® billing_summaries „Å´
--       Â§ñÈÉ®„Ç≠„ÉºÂà∂Á¥Ñ„ÇíËøΩÂä†
-- 
-- ÂΩ±ÈüøÂ∫¶: MEDIUM
-- - billing_items: Êó¢Â≠ò„Éá„Éº„Çø„Å∏„ÅÆÂΩ±ÈüøÁ¢∫Ë™çÂøÖÈ†à
-- - billing_summaries: Êó¢Â≠ò„Éá„Éº„Çø„Å∏„ÅÆÂΩ±ÈüøÁ¢∫Ë™çÂøÖÈ†à
--
-- „É≠„Éº„É´„Éê„ÉÉ„ÇØ: Êú¨„Éï„Ç°„Ç§„É´Êú´Â∞æ„ÅÆ ROLLBACK „Çª„ÇØ„Ç∑„Éß„É≥ÂèÇÁÖß
-- ============================================================================

-- ============================================================================
-- 1. Êó¢Â≠ò„Éá„Éº„ÇøÊï¥ÂêàÊÄß„ÉÅ„Çß„ÉÉ„ÇØ + Â§ñÈÉ®„Ç≠„ÉºÂà∂Á¥ÑËøΩÂä†
-- ============================================================================
DO $$
DECLARE
  v_orphaned_count INTEGER;
  v_fk_count INTEGER;
BEGIN
  -- 1.1. Â≠§Á´ã„Åó„Åübilling_itemsÔºàÂ≠òÂú®„Åó„Å™„ÅÑcollector_id„ÇíÂèÇÁÖßÔºâ
  SELECT COUNT(*) INTO v_orphaned_count
  FROM app.billing_items bi
  WHERE NOT EXISTS (
    SELECT 1 FROM app.collectors c WHERE c.id = bi.collector_id
  );
  
  IF v_orphaned_count > 0 THEN
    RAISE NOTICE '‚ö†Ô∏è  Warning: % billing_items records reference non-existent collectors', v_orphaned_count;
  ELSE
    RAISE NOTICE '‚úÖ billing_items.collector_id: No orphaned records';
  END IF;

  -- 1.2. Â≠§Á´ã„Åó„Åübilling_itemsÔºàÂ≠òÂú®„Åó„Å™„ÅÑorg_id„ÇíÂèÇÁÖßÔºâ
  SELECT COUNT(*) INTO v_orphaned_count
  FROM app.billing_items bi
  WHERE NOT EXISTS (
    SELECT 1 FROM app.organizations o WHERE o.id = bi.org_id
  );
  
  IF v_orphaned_count > 0 THEN
    RAISE NOTICE '‚ö†Ô∏è  Warning: % billing_items records reference non-existent organizations', v_orphaned_count;
  ELSE
    RAISE NOTICE '‚úÖ billing_items.org_id: No orphaned records';
  END IF;

  -- 1.3. Â≠§Á´ã„Åó„Åübilling_summariesÔºàÂ≠òÂú®„Åó„Å™„ÅÑcollector_id„ÇíÂèÇÁÖßÔºâ
  SELECT COUNT(*) INTO v_orphaned_count
  FROM app.billing_summaries bs
  WHERE NOT EXISTS (
    SELECT 1 FROM app.collectors c WHERE c.id = bs.collector_id
  );
  
  IF v_orphaned_count > 0 THEN
    RAISE NOTICE '‚ö†Ô∏è  Warning: % billing_summaries records reference non-existent collectors', v_orphaned_count;
  ELSE
    RAISE NOTICE '‚úÖ billing_summaries.collector_id: No orphaned records';
  END IF;

  RAISE NOTICE 'üìù Adding foreign key constraints...';
END $$;

-- ============================================================================
-- 2. Â§ñÈÉ®„Ç≠„ÉºÂà∂Á¥ÑËøΩÂä†: billing_items
-- ============================================================================

-- 2.1. org_id ‚Üí organizations
ALTER TABLE app.billing_items
ADD CONSTRAINT IF NOT EXISTS fk_billing_items_org
  FOREIGN KEY (org_id)
  REFERENCES app.organizations (id)
  ON DELETE CASCADE
  ON UPDATE NO ACTION;

-- 2.2. collector_id ‚Üí collectors
ALTER TABLE app.billing_items
ADD CONSTRAINT IF NOT EXISTS fk_billing_items_collector
  FOREIGN KEY (collector_id)
  REFERENCES app.collectors (id)
  ON DELETE CASCADE
  ON UPDATE NO ACTION;

-- 2.3. store_id ‚Üí stores (NULLË®±ÂèØ)
ALTER TABLE app.billing_items
ADD CONSTRAINT IF NOT EXISTS fk_billing_items_store
  FOREIGN KEY (store_id)
  REFERENCES app.stores (id)
  ON DELETE SET NULL
  ON UPDATE NO ACTION;

-- 2.4. collection_id ‚Üí collections (NULLË®±ÂèØ)
ALTER TABLE app.billing_items
ADD CONSTRAINT IF NOT EXISTS fk_billing_items_collection
  FOREIGN KEY (collection_id)
  REFERENCES app.collections (id)
  ON DELETE SET NULL
  ON UPDATE NO ACTION;

-- 2.5. waste_type_id ‚Üí waste_type_masters (NULLË®±ÂèØ)
ALTER TABLE app.billing_items
ADD CONSTRAINT IF NOT EXISTS fk_billing_items_waste_type
  FOREIGN KEY (waste_type_id)
  REFERENCES app.waste_type_masters (id)
  ON DELETE SET NULL
  ON UPDATE NO ACTION;

-- ============================================================================
-- 3. Â§ñÈÉ®„Ç≠„ÉºÂà∂Á¥ÑËøΩÂä†: billing_summaries
-- ============================================================================

-- 3.1. org_id ‚Üí organizations
ALTER TABLE app.billing_summaries
ADD CONSTRAINT IF NOT EXISTS fk_billing_summary_org
  FOREIGN KEY (org_id)
  REFERENCES app.organizations (id)
  ON DELETE CASCADE
  ON UPDATE NO ACTION;

-- 3.2. collector_id ‚Üí collectors
ALTER TABLE app.billing_summaries
ADD CONSTRAINT IF NOT EXISTS fk_billing_summary_collector
  FOREIGN KEY (collector_id)
  REFERENCES app.collectors (id)
  ON DELETE CASCADE
  ON UPDATE NO ACTION;

-- ============================================================================
-- 4. Ê§úË®º
-- ============================================================================
DO $$
DECLARE
  v_fk_count INTEGER;
BEGIN
  SELECT COUNT(*) INTO v_fk_count
  FROM information_schema.table_constraints
  WHERE table_schema = 'app'
    AND table_name IN ('billing_items', 'billing_summaries')
    AND constraint_type = 'FOREIGN KEY'
    AND constraint_name LIKE 'fk_billing%';
  
  RAISE NOTICE 'üìä Total foreign keys added: %', v_fk_count;
  
  IF v_fk_count < 7 THEN
    RAISE WARNING 'Expected 7 foreign keys, but found %', v_fk_count;
  ELSE
    RAISE NOTICE '‚úÖ All foreign keys successfully added';
  END IF;
END $$;

-- ============================================================================
-- ROLLBACKÔºàÂïèÈ°åÁô∫ÁîüÊôÇÔºâ
-- ============================================================================
/*
BEGIN;

-- billing_items „ÅÆÂ§ñÈÉ®„Ç≠„ÉºÂà∂Á¥ÑÂâäÈô§
ALTER TABLE app.billing_items DROP CONSTRAINT IF EXISTS fk_billing_items_org;
ALTER TABLE app.billing_items DROP CONSTRAINT IF EXISTS fk_billing_items_collector;
ALTER TABLE app.billing_items DROP CONSTRAINT IF EXISTS fk_billing_items_store;
ALTER TABLE app.billing_items DROP CONSTRAINT IF EXISTS fk_billing_items_collection;
ALTER TABLE app.billing_items DROP CONSTRAINT IF EXISTS fk_billing_items_waste_type;

-- billing_summaries „ÅÆÂ§ñÈÉ®„Ç≠„ÉºÂà∂Á¥ÑÂâäÈô§
ALTER TABLE app.billing_summaries DROP CONSTRAINT IF EXISTS fk_billing_summary_org;
ALTER TABLE app.billing_summaries DROP CONSTRAINT IF EXISTS fk_billing_summary_collector;

COMMIT;
*/

