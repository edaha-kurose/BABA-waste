/**
 * „Ç≥„Çπ„É¢„ÇπËñ¨ÂìÅ„ÅÆÁµÑÁπîÊÉÖÂ†±„ÇíÁ¢∫Ë™ç„Åô„Çã„Çπ„ÇØ„É™„Éó„Éà
 */

import { prisma } from '../src/lib/prisma'

async function main() {
  console.log('\nüè¢ „Ç≥„Çπ„É¢„ÇπËñ¨ÂìÅ„ÅÆÁµÑÁπîÊÉÖÂ†±Á¢∫Ë™ç\n')

  // „Ç≥„Çπ„É¢„ÇπËñ¨ÂìÅ„ÅÆÁµÑÁπîÊÉÖÂ†±
  const cosmosOrg = await prisma.organizations.findFirst({
    where: {
      OR: [
        { name: { contains: '„Ç≥„Çπ„É¢„Çπ' } },
        { name: { contains: 'COSMOS' } },
      ],
      deleted_at: null,
    },
  })

  if (!cosmosOrg) {
    console.log('‚ùå „Ç≥„Çπ„É¢„ÇπËñ¨ÂìÅ„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì')
    return
  }

  console.log('‚úÖ ÁµÑÁπîÊÉÖÂ†±:')
  console.log(`  - ID: ${cosmosOrg.id}`)
  console.log(`  - ÂêçÂâç: ${cosmosOrg.name}`)

  // ÂèéÈõÜÊ•≠ËÄÖÊï∞
  const collectorCount = await prisma.collectors.count({
    where: {
      org_id: cosmosOrg.id,
      deleted_at: null,
      is_active: true,
    },
  })

  console.log(`  - ÂèéÈõÜÊ•≠ËÄÖÊï∞: ${collectorCount}`)

  // Êó¢Â≠ò„ÅÆË´ãÊ±ÇÊòéÁ¥∞
  const itemCount = await prisma.app_billing_items.count({
    where: {
      org_id: cosmosOrg.id,
      deleted_at: null,
    },
  })

  console.log(`  - Ë´ãÊ±ÇÊòéÁ¥∞Êï∞: ${itemCount}`)

  // Êó¢Â≠ò„ÅÆË´ãÊ±Ç„Çµ„Éû„É™„Éº
  const summaryCount = await prisma.billing_summaries.count({
    where: {
      org_id: cosmosOrg.id,
    },
  })

  console.log(`  - Ë´ãÊ±Ç„Çµ„Éû„É™„ÉºÊï∞: ${summaryCount}`)

  await prisma.$disconnect()
}

main().catch((err) => {
  console.error('‚ùå „Ç®„É©„Éº:', err)
  process.exit(1)
})


