/**
 * ÁõÆÁöÑ: deleted_at „Åå NULL „Åß„Å™„ÅÑ item_maps „ÇíÁ¢∫Ë™ç
 */

import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

const TARGET_ORG_ID = '00000000-0000-0000-0000-000000000001'

async function main() {
  console.log('üîç Ë´ñÁêÜÂâäÈô§„Åï„Çå„Åü item_maps „ÇíÁ¢∫Ë™ç...\n')

  // deleted_at „Åå NULL „Åß„Å™„ÅÑ„É¨„Ç≥„Éº„Éâ
  const deletedItems = await prisma.item_maps.findMany({
    where: {
      org_id: TARGET_ORG_ID,
      deleted_at: { not: null },
    },
    select: {
      id: true,
      item_label: true,
      jwnet_code: true,
      deleted_at: true,
    },
    orderBy: { item_label: 'asc' },
  })

  console.log(`üìã Ë´ñÁêÜÂâäÈô§„Åï„Çå„Åü„É¨„Ç≥„Éº„Éâ: ${deletedItems.length}‰ª∂`)
  deletedItems.forEach((item, i) => {
    console.log(`  ${i + 1}. "${item.item_label}" (code: ${item.jwnet_code}, deleted_at: ${item.deleted_at?.toISOString()})`)
  })

  // „Åô„Åπ„Å¶„ÅÆ„É¨„Ç≥„Éº„ÉâÔºàdeleted_at Âïè„Çè„ÅöÔºâ
  console.log('\nüìã „Åô„Åπ„Å¶„ÅÆ„É¨„Ç≥„Éº„ÉâÔºàdeleted_at Âïè„Çè„ÅöÔºâ:')
  const allItems = await prisma.item_maps.findMany({
    where: {
      org_id: TARGET_ORG_ID,
    },
    select: {
      item_label: true,
      jwnet_code: true,
      deleted_at: true,
    },
    orderBy: { item_label: 'asc' },
  })

  console.log(`  ÂêàË®à: ${allItems.length}‰ª∂`)
  allItems.forEach((item, i) => {
    const status = item.deleted_at ? '‚ùå ÂâäÈô§Ê∏à' : '‚úÖ ÊúâÂäπ'
    console.log(`  ${i + 1}. "${item.item_label}" ‚Üí ${item.jwnet_code} [${status}]`)
  })

  await prisma.$disconnect()
}

main().catch((e) => {
  console.error('‚ùå „Ç®„É©„Éº:', e)
  process.exit(1)
})


